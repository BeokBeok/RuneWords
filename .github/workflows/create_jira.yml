name: Create Jira Ticket from PR Comment

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]

jobs:
  create-jira-ticket:
    if: endsWith(github.event.comment.body, '티켓생성')
    runs-on: ubuntu-latest
    steps:
      - name: Extract ticket title
        id: ticket
        run: |
          RAW_COMMENT="${{ github.event.comment.body }}"
          TRIMMED_COMMENT=$(echo "$RAW_COMMENT" | sed 's/[[:space:]]*티켓생성$//')
          if [ "$TRIMMED_COMMENT" != "$RAW_COMMENT" ]; then
            TITLE="$TRIMMED_COMMENT"
          else
            echo "Error: Command must end with '티켓생성'."
            exit 1
          fi
            
          echo "title=$TITLE" >> $GITHUB_OUTPUT

      - name: Find referenced comment URL
        id: comment
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPO="${{ github.repository }}"
          COMMENT_ID=$(jq -r '.comment.id' "$GITHUB_EVENT_PATH")
          REPLY_TO_ID=$(jq -r '.comment.in_reply_to_id' "$GITHUB_EVENT_PATH")
          
          if [ "$REPLY_TO_ID" = "null" ]; then
            echo "Not a reply. Failing."
            exit 1
          fi
          
          COMMENT=$(gh api repos/$REPO/pulls/comments/$REPLY_TO_ID)
          COMMENT_URL=$(echo "$COMMENT" | jq -r '.html_url')
          
          echo "comment_url=$COMMENT_URL" >> $GITHUB_OUTPUT

      - name: Create Jira Ticket
        run: |
          curl --request POST \
            --url 'https://beokbeok.atlassian.net/rest/api/3/issue' \
            --user 'kekemusa37@gmail.com:${{ secrets.JIRA_API_TOKEN }}' \
            --header 'Accept: application/json' \
            --header 'Content-Type: application/json' \
            --data '{
              "fields": {
                "project": {
                  "key": "${{ secrets.JIRA_PROJECT_KEY }}"
                },
                "summary": "${{ steps.ticket.outputs.title }}",
                "description": {
                  "version": 1,
                  "type": "doc",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "${{ steps.comment.outputs.comment_url }} 와 관련된 내용입니다.",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                },
                "issuetype": {
                  "name": "Task"
                }
              }
            }'
